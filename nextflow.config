/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    eastgenomics/mini_uranus_just_bwamem Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    reads                      = ""//null
    bwa_index                  =  "" //""//null

    // MOSDEPTH
    mosdepth_bed               = ""//null
    mosdepth_window_size = 500
    outdir                     = "results"

    // CGPPINDEL
    docker.enabled = true
    help = false
    tumour = ""
    tumour_index = ""
    normal = ""
    normal_index = ""
    genomefa = ""
    genes = ""
    unmatched = ""
    simrep = ""
    simrep_index = ""
    filter = ""
    genomefa_fai = ""
    project_dir = ""
    docker_image = ""
    cgppindel_id = ""
    assembly = "GRCh38"
    species = "Human"
    seqtype = "TG" 
    

    // Boilerplate options
    outdir                       = ""//null
    publish_dir_mode             = 'copy'
    monochrome_logs              = false
    version                      = false
}

/// bwa mem ///
process {
    resourceLimits = [
        cpus: 5
    ]

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: 'copy',
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
    
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    dnanexus {
        executor {
            name = 'local'
            queueSize = 100
        }
        docker {
            enabled = true
        }
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
        process {
            memory = 9.GB  // Default memory limit for all processes when using Docker
            cpus   = 6
        }
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    laptop {
        process {
            cpus   = 5
            withLabel:process_high {
                memory = 12.GB 
                cpus   = 5
            }
            withName: 'SAMTOOLS_SORT' {
                memory = 8.GB  // Limit total memory to 8GB
                cpus = 5  // Limit the number of threads (adjust as needed)
            }
            withName: 'SAMTOOLS_INDEX' {
                memory = 8.GB  // Limit total memory to 8GB
                cache = false
                cpus = 5  // Limit the number of threads (adjust as needed)
            }
            withName: 'MOSDEPTH' {
                memory = 8.GB  // Limit total memory to 8GB
                cpus = 5  // Limit the number of threads (adjust as needed)
            }
            withName: 'BWA_MEM' {
                memory = 8.GB  // Limit total memory to 8GB
                ext.args = {"-R '@RG\\tID:$meta.id\\tPL:ILLUMINA\\tPU:$meta.id\\tLB:$meta.id\\tSM:$meta.id'"}
                cpus = 5  // Limit the number of threads (adjust as needed)
            }
            withName: 'EXTRACT_BWA_INDEX' {
                memory = 8.GB  // Limit total memory to 8GB
                cpus = 5  // Limit the number of threads (adjust as needed)
            }

        }
        docker.enabled = true  // or singularity.enabled = true if you prefer Singularity

    }

    
}



// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'



// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = """\
bash

set -e # Exit if a tool returns a non-zero status/exit code
set -u # Treat unset variables and parameters as an error
set -o pipefail # Returns the status of the last command to exit with a non-zero status or zero if all successfully execute
set -C # No clobber - prevent output redirection from overwriting files.
"""

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'eastgenomics/mini_uranus_just_bwamem'
    author          = """RCM"""
    homePage        = 'https://github.com/eastgenomics/mini_uranus_just_bwamem'
    description     = """justsinglebwamem"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=23.08.0'
    version         = '1.0.0dev'
    doi             = ''
}



// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
